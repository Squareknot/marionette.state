{"version":3,"sources":["marionette.state.js"],"names":[],"mappings":"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","file":"marionette.state.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('underscore'), require('backbone'), require('backbone.marionette')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'backbone', 'backbone.marionette'], factory) :\n  global.Marionette.State = factory(global._, global.Backbone, global.Mn)\n}(this, function (_, Backbone, Mn) { 'use strict';\n\n  const State = Mn.Object.extend({\n\n    // State model class to instantiate\n    modelClass: undefined,\n\n    // Default state attributes hash\n    defaultState: undefined,\n\n    // Events from my component\n    componentEvents: undefined,\n\n    // State model instance\n    _model: undefined,\n\n    // My component, facilitating lifecycle management and event bindings\n    _component: undefined,\n\n    // Initial state attributes hash after 'initialState' option and defaults are applied\n    _initialState: undefined,\n\n    // options {\n    //   initialState: {object} Attributes that will override `defaultState`.  The result of\n    //     defaultState + initialState is the state reverted to by `#reset`.\n    //   component: {Mn object} Object to which to bind `componentEvents` and also lifecycle;\n    //     i.e., when `component` fires 'destroy', then destroy myself.\n    //   preventDestroy: {boolean} If true, then this will not destroy on `component` destroy.\n    // }\n    constructor({ initialState, component, preventDestroy }={}) {\n      // State model class is either passed in, on the class, or a standard Backbone model\n      this.modelClass = this.modelClass || Backbone.Model;\n\n      // Initialize state\n      this._initState(initialState);\n\n      if (component) {\n        this.bindComponent(component, { preventDestroy });\n      }\n\n      State.__super__.constructor.apply(this, arguments);\n    },\n\n    // Initialize model with attrs or reset it, destructively, to conform to attrs.\n    _initState(attrs) {\n      // Set initial state.\n      this._initialState = _.extend({}, this.defaultState, attrs);\n\n      if (this._model) {\n        // Reset existing model with initial state.\n        this.reset();\n      } else {\n        // Create new model with initial state.\n        /* eslint-disable new-cap */\n        this._model = new this.modelClass(this._initialState);\n        this._proxyModelEvents(this._model);\n      }\n    },\n\n    // Return the state model.\n    getModel() {\n      return this._model;\n    },\n\n    // Returns the initiate state, which is reverted to by reset()\n    getInitialState() {\n      return _.clone(this._initialState);\n    },\n\n    // Proxy to model get().\n    get(attr) {\n      return this._model.get(attr);\n    },\n\n    // Proxy to model set().\n    set(key, val, options) {\n      this._model.set(key, val, options);\n      return this;\n    },\n\n    // Return state to its initial value.\n    // If `attrs` is provided, they will override initial values for a \"partial\" reset.\n    // Initial state will remain unchanged regardless of override attributes.\n    reset(attrs, options) {\n      var resetAttrs = _.extend({}, this._initialState, attrs);\n      this._model.set(resetAttrs, options);\n      return this;\n    },\n\n    // Proxy to model changedAttributes().\n    getChanged() {\n      return this._model.changedAttributes();\n    },\n\n    // Proxy to model previousAttributes().\n    getPrevious() {\n      return this._model.previousAttributes();\n    },\n\n    // Determine if any of the passed attributes were changed during the last modification.\n    hasAnyChanged(...attrs) {\n      return !!_.chain(this._model.changed)\n        .keys()\n        .intersection(attrs)\n        .size()\n        .value();\n    },\n\n    bindComponent(component, { preventDestroy }={}) {\n      this.bindEntityEvents(component, this.componentEvents);\n      if (!preventDestroy) {\n        this._bindLifecycle(component);\n      }\n    },\n\n    unbindComponent(component) {\n      this.unbindEntityEvents(component, this.componentEvents);\n      this._unbindLifecycle(component);\n    },\n\n    // When `component` fires \"destroy\" event, this State will also destroy.\n    _bindLifecycle(component) {\n      if (!this._boundDestroy) {\n        this._boundDestroy = this.destroy.bind(this);\n      }\n      this.listenTo(component, 'destroy', this._boundDestroy);\n      return this;\n    },\n\n    // Stop listening to `component` \"destroy\" event.\n    _unbindLifecycle(component) {\n      this.stopListening(component, 'destroy', this._boundDestroy);\n      return this;\n    },\n\n    // Proxy to StateFunctions#syncEntityEvents.\n    syncEntityEvents(entity, entityEvents, event) {\n      State.syncEntityEvents(this, entity, entityEvents, event);\n      return this;\n    },\n\n    // Proxy to StateFunctions#stopSyncingEntityEvents.\n    stopSyncingEntityEvents(entity, entityEvents, event) {\n      State.stopSyncingEntityEvents(this, entity, entityEvents, event);\n    },\n\n    // Convert model events to state events\n    _proxyModelEvents: function (other) {\n      this.listenTo(other, 'all', function () {\n        if (arguments.length > 1 && arguments[1] === this._model) {\n          // Replace model argument with State\n          arguments[1] = this;\n        }\n        this.trigger.apply(this, arguments);\n      });\n    }\n  });\n\n  var state = State;\n\n  var modelEventMatcher = /^(?:all|change|change:(.+))$/;\n  var collectionEventMatcher = /^(?:all|reset)$/;\n  var spaceMatcher = /\\s+/;\n\n  // Sync individual event binding 'event1' => 'handler1 handler2'.\n  function syncBinding(target, entity, event, handlers) {\n    var changeAttrMatch;\n    var collectionMatch =\n      entity instanceof Backbone.Collection &&\n      event.match(collectionEventMatcher);\n    var modelMatch =\n      (entity instanceof Backbone.Model || entity instanceof state) &&\n      (changeAttrMatch = event.match(modelEventMatcher));\n    if (!collectionMatch && !modelMatch) {\n      return;\n    }\n\n    var changeValue = changeAttrMatch && entity.get(changeAttrMatch[1]);\n    if (_.isFunction(handlers)) {\n      handlers.call(target, entity, changeValue);\n    } else {\n      var handlerKeys = handlers.split(spaceMatcher);\n      for (var i = 0; i < handlerKeys.length; i++) {\n        var handlerKey = handlerKeys[i];\n        target[handlerKey](entity, changeValue);\n      }\n    }\n  }\n\n  // Sync bindings hash { 'event1 event 2': 'handler1 handler2' }.\n  function sync(target, entity, bindings) {\n    for (var eventStr in bindings) {\n      var handlers = bindings[eventStr];\n      var events = eventStr.split(spaceMatcher);\n      for (var i = 0; i < events.length; i++) {\n        var event = events[i];\n        syncBinding(target, entity, event, handlers);\n      }\n    }\n  }\n\n  // A stoppable handle on the syncing listener\n  class Syncing {\n\n    constructor(target, entity, bindings) {\n      this.target = target;\n      this.entity = entity;\n      this.bindings = bindings;\n    }\n\n    stop() {\n      this.target.off(this.event, this.handler);\n      this.event = this.handler = null;\n    }\n\n    _when(event) {\n      Mn.bindEntityEvents(this.target, this.entity, this.bindings);\n      this.event = event;\n      this.handler = _.bind(sync, this, this.target, this.entity, this.bindings);\n      this.target\n        .on(this.event, this.handler)\n        .on('destroy', _.bind(this.stop, this));\n    }\n\n    _now() {\n      Mn.bindEntityEvents(this.target, this.entity, this.bindings);\n      sync(this.target, this.entity, this.bindings);\n    }\n  }\n\n  // Binds events handlers located on target to an entity using Marionette.bindEntityEvents, and\n  // also \"syncs\" initial state either immediately or whenever target fires a specific event.\n  //\n  // Initial state is synced by calling certain handlers at a precise moment.  Only the following\n  // entity events will sync their handlers: 'all', 'change', 'change:attr', and 'reset'.\n  //\n  // Returns a Syncing instance.  While syncing handlers are unbound on target destroy, the syncing\n  // instance has a single public method stop() for ceasing syncing on target events early.\n  function syncEntityEvents(target, entity, bindings, event) {\n    var syncing = new Syncing(target, entity, bindings);\n    if (event) {\n      syncing._when(event);\n    } else {\n      syncing._now();\n    }\n    return syncing;\n  }\n\n  state.syncEntityEvents = syncEntityEvents;\n\n  var index = state;\n\n  return index;\n\n}));\n"],"sourceRoot":"/source/"}