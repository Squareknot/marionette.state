{"version":3,"sources":["marionette.state.js"],"names":[],"mappings":"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","file":"marionette.state.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('underscore'), require('backbone'), require('backbone.marionette')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'backbone', 'backbone.marionette'], factory) :\n  global.Marionette.State = factory(global._, global.Backbone, global.Mn)\n}(this, function (_, Backbone, Mn) { 'use strict';\n\n  const State = Mn.Object.extend({\n\n    // State model class to instantiate\n    modelClass: undefined,\n\n    // Default state attributes hash\n    defaultState: undefined,\n\n    // Events from my component\n    componentEvents: undefined,\n\n    // State model instance\n    _model: undefined,\n\n    // My component, facilitating lifecycle management and event bindings\n    _component: undefined,\n\n    // Initial state attributes hash after 'initialState' option and defaults are applied\n    _initialState: undefined,\n\n    // options {\n    //   bindLifecycle: {Mn object} Optionally bind lifecycle to object.\n    //   initialState: {attrs} Optional initial state (defaultState will still be applied)\n    constructor(options={}) {\n      if (options.bindLifecycle) { this.bindLifecycle(options.bindLifecycle); }\n\n      // State model class is either passed in, on the class, or a standard Backbone model\n      this.modelClass = options.modelClass || this.modelClass || Backbone.Model;\n\n      // Initialize state\n      this.initState(options.initialState);\n\n      State.__super__.constructor.apply(this, arguments);\n    },\n\n    // Initialize model with attrs or reset it, destructively, to conform to attrs.\n    initState(attrs, options) {\n      // Set initial state.\n      this._initialState = _.extend({}, this.defaultState, attrs);\n\n      if (this._model) {\n        // Reset existing model with initial state.\n        this.reset(null, options);\n      } else {\n        // Create new model with initial state.\n        /* eslint-disable new-cap */\n        this._model = new this.modelClass(this._initialState);\n        this._proxyModelEvents(this._model);\n      }\n\n      return this;\n    },\n\n    // Returns the initiate state, which is reverted to by reset()\n    getInitialState() {\n      return _.clone(this._initialState);\n    },\n\n    // Return the state model.\n    getModel() {\n      return this._model;\n    },\n\n    // Proxy to model set().\n    set() {\n      if (!this._model) { throw new Mn.Error('Initialize state first.'); }\n      this._model.set.apply(this._model, arguments);\n      return this;\n    },\n\n    // Proxy to model get().\n    get() {\n      if (!this._model) { throw new Mn.Error('Initialize state first.'); }\n      return this._model.get.apply(this._model, arguments);\n    },\n\n    // Return state to its initial value.\n    // If `attrs` is provided, they will override initial values for a \"partial\" reset.\n    reset(attrs, options) {\n      var resetAttrs = _.extend({}, this._initialState, attrs);\n      this._model.set(resetAttrs, options);\n      return this;\n    },\n\n    // Proxy to model changedAttributes().\n    getChanged() {\n      return this._model.changedAttributes();\n    },\n\n    // Proxy to model previousAttributes().\n    getPrevious() {\n      return this._model.previousAttributes();\n    },\n\n    // Determine if any of the passed attributes were changed during the last modification.\n    hasAnyChanged(...attrs) {\n      return !!_.chain(this._model.changed)\n        .keys()\n        .intersection(attrs)\n        .size()\n        .value();\n    },\n\n    syncComponent(component, stateEvents, syncEvent) {\n      if (_.isString(stateEvents)) {\n        syncEvent = stateEvents;\n      } else {\n        stateEvents = stateEvents || component.stateEvents;\n      }\n\n      if (this.componentEvents) {\n        this.bindEntityEvents(component, this.componentEvents);\n      }\n      if (stateEvents) {\n        State.syncEntityEvents(component, this, stateEvents, syncEvent);\n      }\n      return this;\n    },\n\n    stopSyncingComponent(component, stateEvents, syncEvent) {\n      if (this.componentEvents) {\n        this.unbindEntityEvents(component, this.componentEvents);\n      }\n      State.stopSyncingEntityEvents(component, this, stateEvents, syncEvent);\n      return this;\n    },\n\n    bindLifecycle(component) {\n      if (!this._boundDestroy) { this.boundDestroy = this.destroy.bind(this); }\n      this.listenTo(component, 'destroy', this._boundDestroy);\n      return this;\n    },\n\n    unbindLifecycle(component) {\n      this.stopListening(component, 'destroy', this._boundDestroy);\n    },\n\n    // Proxy to StateFunctions#syncEntityEvents.\n    syncEntityEvents(entity, entityEvents, event) {\n      State.syncEntityEvents(this, entity, entityEvents, event);\n      return this;\n    },\n\n    _proxyModelEvents: function (other) {\n      this.listenTo(other, 'all', function () {\n        if (arguments.length > 1 && arguments[1] === this._model) {\n          arguments[1] = this;\n        }\n        this.trigger.apply(this, arguments);\n      }.bind(this));\n    }\n  });\n\n  var state = State;\n\n  var changeMatcher = /^change:(.+)/;\n  var spaceMatcher = /\\s+/;\n\n  // Call all handlers optionally with a value (given a named attribute 'attr')\n  function callHandlers(target, entity, handlers, attr) {\n    var value = attr ? entity.get(attr) : undefined;\n\n    if (_.isFunction(handlers)) {\n      handlers.call(target, entity, value);\n    } else {\n      var handlerKeys = handlers.split(spaceMatcher);\n      _.each(handlerKeys, (handlerKey) => {\n        target[handlerKey](entity, value);\n      });\n    }\n  }\n\n  // Sync 'target' with event 'event1' and its handlers 'handler1 handler2', depending on event\n  // and entity type.  Call value handlers for Backbone.Model 'change:attr' events, and call generic\n  // handlers for Backbone.Model 'change', 'all' or Backbone.Collection 'change', 'all', or 'reset'.\n  function syncBinding(target, entity, event, handlers) {\n    var changeMatch;\n    if (event === 'change' || event === 'all' ||\n        (entity instanceof Backbone.Collection && event === 'reset')) {\n      callHandlers(target, entity, handlers);\n    } else if (\n        (entity instanceof Backbone.Model || entity instanceof state) &&\n        (changeMatch = event.match(changeMatcher))) {\n      var attr = changeMatch[1];\n      callHandlers(target, entity, handlers, attr);\n    }\n  }\n\n  // Sync 'target' with an array of events ['event1', 'event2'] and their handlers\n  // 'handler1 handler2'.\n  function syncBindings(target, entity, events, handlers) {\n    _.each(events, (event) => {\n      syncBinding(target, entity, event, handlers);\n    });\n  }\n\n  // Sync 'target' with the bindings hash { 'event1 event 2': 'handler1 handler2' }.\n  function sync(target, entity, bindings) {\n    _.each(bindings, (handlers, eventStr) => {\n      var events = eventStr.split(spaceMatcher);\n      syncBindings(target, entity, events, handlers);\n    });\n  }\n\n  function Syncing(target, entity, bindings) {\n    this.target = target;\n    this.entity = entity;\n    this.bindings = bindings;\n  }\n\n  Syncing.prototype.when = function (eventObj, event) {\n    if (!event) {\n      event = eventObj;\n      eventObj = this.target;\n    }\n    this.eventObj = eventObj;\n    this.event = event;\n    this.handler = () => {\n      sync(this.target, this.entity, this.bindings);\n    };\n    this.target.listenTo(this.eventObj, this.event, this.handler);\n    return this;\n  };\n\n  Syncing.prototype.now = function () {\n    sync(this.target, this.entity, this.bindings);\n    return this;\n  };\n\n  Syncing.stop = function () {\n    this.target.stopListening(this.eventObj, this.event, this.handler);\n  };\n\n  var stateFunctions = {\n\n    // Binds 'bindings' handlers located on 'target' to 'entity' using\n    // Marionette.bindEntityEvents, but then initializes state by calling handlers:\n    //   Backbone.Model\n    //     'all'          (model)\n    //     'change'       (model)\n    //     'change:value' (model, value)\n    //   Backbone.Collection\n    //     'all'          (collection)\n    //     'reset'        (collection)\n    //     'change'       (collection)\n    //\n    // Handlers are called immediately unless 'event' is supplied, in which case handlers will be\n    // called every time 'target' triggers 'event'. Views will automatically sync on 'render'\n    // unless this argument is supplied.\n    //\n    // For event mappings with multiple matching events, all handlers are called for each event.\n    // For example, the following mapping:\n    //   { 'change:foo change:bar': 'doSomething doSomethingElse' }\n    // will call:\n    //   doSomething(model, model.get('foo'))\n    //   doSomethingElse(model, model.get('foo'))\n    //   doSomething(model, model.get('bar'))\n    //   doSomethingElse(model, model.get('bar'))\n    syncEntityEvents(target, entity, bindings, event) {\n      Mn.bindEntityEvents(target, entity, bindings);\n      var syncing = new Syncing(target, entity, bindings);\n      if (event) {\n        syncing.when(event);\n      } else {\n        syncing.now();\n      }\n    },\n\n    // Ceases syncing entity events.\n    // TODO\n    stopSyncingEntityEvents(target, entity, bindings, event) {\n      target = entity = bindings = event; // Suppress unused\n    }\n  };\n\n  var state_functions = stateFunctions;\n\n  _.extend(state, state_functions);\n\n  var index = state;\n\n  return index;\n\n}));\n"],"sourceRoot":"/source/"}