{"version":3,"sources":["marionette.state.js"],"names":[],"mappings":"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","file":"marionette.state.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('underscore'), require('backbone'), require('backbone.marionette')) :\n  typeof define === 'function' && define.amd ? define(['underscore', 'backbone', 'backbone.marionette'], factory) :\n  global.Marionette.State = factory(global._, global.Backbone, global.Mn)\n}(this, function (_, Backbone, Mn) { 'use strict';\n\n  var changeMatcher = /^change:(.+)/;\n  var spaceMatcher = /\\s+/;\n\n  // Call all handlers optionally with a value (given a named attribute 'attr')\n  function callHandlers(target, entity, handlers, attr) {\n    var value = attr ? entity.get(attr) : undefined;\n\n    if (_.isFunction(handlers)) {\n      handlers.call(target, entity, value);\n    }\n    else {\n      var handlerKeys = handlers.split(spaceMatcher);\n      _.each(handlerKeys, (handlerKey) => {\n        target[handlerKey](entity, value);\n      });\n    }\n  }\n\n  // Sync 'target' with event 'event1' and its handlers 'handler1 handler2', depending on event\n  // and entity type.  Call value handlers for Backbone.Model 'change:attr' events, and call generic\n  // handlers for Backbone.Model 'change', 'all' or Backbone.Collection 'change', 'all', or 'reset'.\n  function syncBinding(target, entity, event, handlers) {\n    var changeMatch;\n    if (event === 'change' || event === 'all' ||\n        (entity instanceof Backbone.Collection && event === 'reset')) {\n      callHandlers(target, entity, handlers);\n    }\n    else if (\n        (entity instanceof Backbone.Model || entity instanceof _state) &&\n        (changeMatch = event.match(changeMatcher))) {\n      var attr = changeMatch[1];\n      callHandlers(target, entity, handlers, attr);\n    }\n  }\n\n  // Sync 'target' with an array of events ['event1', 'event2'] and their handlers\n  // 'handler1 handler2'.\n  function syncBindings(target, entity, events, handlers) {\n    _.each(events, (event) => {\n      syncBinding(target, entity, event, handlers);\n    });\n  }\n\n  // Sync 'target' with the bindings hash { 'event1 event 2': 'handler1 handler2' }.\n  function sync(target, entity, bindings) {\n    _.each(bindings, (handlers, eventStr) => {\n      var events = eventStr.split(spaceMatcher);\n      syncBindings(target, entity, events, handlers);\n    });\n  }\n\n  function Syncing(target, entity, bindings) {\n    this.target = target;\n    this.entity = entity;\n    this.bindings = bindings;\n  }\n\n  Syncing.prototype.when = function (eventObj, event) {\n    if (!event) {\n      event = eventObj;\n      eventObj = this.target;\n    }\n    this.eventObj = eventObj;\n    this.event = event;\n    this.handler = () => {\n      sync(this.target, this.entity, this.bindings);\n    };\n\n    this.target.__syncingEntityEvents = this.target.__syncingEntityEvents || [];\n    this.target.__syncingEntityEvents.push(this);\n    this.target.listenTo(this.eventObj, this.event, this.handler);\n    return this;\n  };\n\n  Syncing.prototype.now = function () {\n    sync(this.target, this.entity, this.bindings);\n    return this;\n  };\n\n  // Binds 'bindings' handlers located on 'target' to 'entity' using\n  // Marionette.bindEntityEvents, but then initializes state by calling handlers:\n  //   Backbone.Model\n  //     'all'          (model)\n  //     'change'       (model)\n  //     'change:value' (model, value)\n  //   Backbone.Collection\n  //     'all'          (collection)\n  //     'reset'        (collection)\n  //     'change'       (collection)\n  //\n  // Handlers are called immediately unless 'event' is supplied, in which case handlers will be\n  // called every time 'target' triggers 'event'. Views will automatically sync on 'render'\n  // unless this argument is supplied.\n  //\n  // For event mappings with multiple matching events, all handlers are called for each event.\n  // For example, the following mapping:\n  //   { 'change:foo change:bar': 'doSomething doSomethingElse' }\n  // will call:\n  //   doSomething(model, model.get('foo'))\n  //   doSomethingElse(model, model.get('foo'))\n  //   doSomething(model, model.get('bar'))\n  //   doSomethingElse(model, model.get('bar'))\n  function syncEntityEvents(target, entity, bindings, event) {\n    Mn.bindEntityEvents(target, entity, bindings);\n    var syncing = new Syncing(target, entity, bindings);\n    if (event) {\n      syncing.when(event);\n    }\n    else {\n      syncing.now();\n    }\n  }\n\n  // Ceases syncing entity events.\n  function stopSyncingEntityEvents(target, entity, bindings) {\n    Mn.unbindEntityEvents(target, entity, bindings);\n    if (target.__syncingEntityEvents) {\n      _.each(target.__syncingEntityEvents, (syncing) => {\n        target.stopListening(syncing.eventObj, syncing.event, syncing.handler);\n      });\n    }\n  }\n\n  const State = Mn.Object.extend({\n\n    // State model class to instantiate\n    modelClass: undefined,\n\n    // Default state attributes hash\n    defaultState: undefined,\n\n    // Events from my component\n    componentEvents: undefined,\n\n    // State model instance\n    _model: undefined,\n\n    // My component, facilitating lifecycle management and event bindings\n    _component: undefined,\n\n    // Initial state attributes hash after 'initialState' option and defaults are applied\n    _initialState: undefined,\n\n    // options {\n    //   component:    {Marionette object} An arbitrary object for lifetime and event binding.\n    //     May be any Marionette object, so long as it has a destroy() method.\n    //   initialState: {attrs} Optional initial state (defaultState will still be applied)\n    constructor(options) {\n      options = options || {};\n      // Bind to component\n      if (options.component) { this.setComponent(options.component); }\n\n      // State model class is either passed in, on the class, or a standard Backbone model\n      this.modelClass = options.modelClass || this.modelClass || Backbone.Model;\n\n      // Initialize state\n      this.initState(options.initialState);\n\n      State.__super__.constructor.apply(this, arguments);\n    },\n\n    // Initialize model with attrs or reset it, destructively, to conform to attrs.\n    initState(attrs, options) {\n      // Set initial state.\n      this._initialState = _.extend({}, this.defaultState, attrs);\n\n      if (this._model) {\n        // Reset existing model with initial state.\n        this.reset(null, options);\n      }\n      else {\n        // Create new model with initial state.\n        /* eslint-disable new-cap */\n        this._model = new this.modelClass(this._initialState);\n        this._proxyEvents(this._model);\n      }\n    },\n\n    // Bind lifetime and component events to an object initialized with Backbone.Events, such as\n    // a Backbone model or a Marionette object.\n    setComponent(eventedObj) {\n      this.stopListening(this._component, 'destroy');\n      if (this.componentEvents) {\n        this.unbindEntityEvents(this._component, this.componentEvents);\n      }\n      this._component = eventedObj;\n      this.listenToOnce(this._component, 'destroy', this.destroy);\n      if (this.componentEvents) {\n        this.bindEntityEvents(this._component, this.componentEvents);\n      }\n    },\n\n    // Returns the initiate state, which is reverted to by reset()\n    getInitialState() {\n      return _.clone(this._initialState);\n    },\n\n    // Marionette object bound to\n    getComponent() {\n      return this._component;\n    },\n\n    // Return the state model.\n    getModel() {\n      return this._model;\n    },\n\n    // Proxy to model set().\n    set() {\n      if (!this._model) { throw new Mn.Error('Initialize state first.'); }\n      this._model.set.apply(this._model, arguments);\n    },\n\n    // Proxy to model get().\n    get() {\n      if (!this._model) { throw new Mn.Error('Initialize state first.'); }\n      return this._model.get.apply(this._model, arguments);\n    },\n\n    // Return state to its initial value.\n    // If `attrs` is provided, they will override initial values for a \"partial\" reset.\n    reset(attrs, options) {\n      var resetAttrs = _.extend({}, this._initialState, attrs);\n      this._model.set(resetAttrs, options);\n    },\n\n    // Proxy to model changedAttributes().\n    getChanged() {\n      return this._model.changedAttributes();\n    },\n\n    // Proxy to model previousAttributes().\n    getPrevious() {\n      return this._model.previousAttributes();\n    },\n\n    // Determine if any of the passed attributes were changed during the last modification.\n    hasAnyChanged(...attrs) {\n      return !!_.chain(this._model.changed)\n        .keys()\n        .intersection(attrs)\n        .size()\n        .value();\n    },\n\n    // Proxy to StateFunctions#syncEntityEvents.\n    syncEntityEvents(entity, entityEvents, event) {\n      return syncEntityEvents(this, entity, entityEvents, event);\n    },\n\n    _proxyEvents: function (other) {\n      this.listenTo(other, 'all', function () {\n        if (arguments.length > 1 && arguments[1] === this._model) {\n          arguments[1] = this;\n        }\n        this.trigger.apply(this, arguments);\n      }.bind(this));\n    }\n  });\n\n  var _state = State;\n\n  const StateBehavior = Mn.Behavior.extend({\n\n    // options {\n    //   stateClass:   {Marionette.StateService class} Type of Marionette.State to instantiate\n    //   syncEvent:    {String} View event on which to call state handlers, keeping the DOM in\n    //                   sync with state. Defaults to 'render'.\n    //   initialState: {object} Optional initial state attrs\n    //   stateOptions: {object} Options to pass to Marionette.State\n    //   mapOptions:   {object} Map view options to Marionette.State options\n    //     - { stateOption: 'viewOption' }          viewOption will be passed as stateOption\n    //     - { stateOption: 'viewOption.property' } viewOption.property will be passed\n    //     - { stateOption: true }                  viewOption named 'stateOption' will be passed\n    //     - { stateOption: function(viewOptions) } return value of function will be passed\n    //   serialize:    {boolean} Whether to serialize state into template (default false)\n    // }\n    initialize(options) {\n      options = options || {};\n      if (!options.stateClass) { throw new Mn.Error('Must provide \\'stateClass\\'.'); }\n      var StateClass = options.stateClass;\n      var syncEvent = options.syncEvent || 'render';\n\n      // Compose State options and create State object\n      var stateOptions = _.extend({\n        initialState: options.initialState,\n        component:    this.view\n      }, options.stateOptions, this._mapOptions(options.mapOptions));\n      var state = new StateClass(stateOptions);\n\n      // Give view access to the state model, but not the state object directly in order to\n      // encourage decoupling; i.e., using view event triggers -> Marionette.State componentEvents.\n      if (this.view.stateModel) { throw new Error('View already contains a stateModel attribute.'); }\n      this.view.stateModel = state.getModel();\n\n      // Bind state events as well as call change handlers onRender to keep DOM in sync with state.\n      if (this.view.stateEvents) {\n        syncEntityEvents(this.view, this.view.stateModel, this.view.stateEvents, syncEvent);\n      }\n\n      // Optionally set up serialization of state attributes to view template as 'state.attribute'\n      if (options.serialize) { this._wrapSerializeData(); }\n    },\n\n    // Convert view options into Marionette.State options\n    _mapOptions(mappings) {\n      if (!mappings) {\n        return {};\n      }\n      return _.object(_.map(mappings, this._mapOption, this));\n    },\n\n    _mapOption(viewOptionKey, stateOptionKey) {\n      var stateOptionValue;\n\n      if (viewOptionKey === true) {\n        // Identity transformation; e.g., { stateOption: 'stateOption' }\n        stateOptionValue = this.view.options[stateOptionKey];\n      }\n      else if (_.isString(viewOptionKey)) {\n        // Unwind nested keys; e.g., 'value.property.subproperty'\n        stateOptionValue = _.reduce(viewOptionKey.split('.'), (memo, key) => {\n          return memo[key];\n        }, this.view.options);\n      }\n      else if (_.isFunction(viewOptionKey)) {\n        // Evaluate function in the view context and pass the view options\n        stateOptionValue = viewOptionKey.call(this.view, this.view.options);\n      }\n      else {\n        throw new Mn.Error('Invalid mapOption value. Expecting true, String, or Function.');\n      }\n\n      return [stateOptionKey, stateOptionValue];\n    },\n\n    // Safe wrapping of serialize data. Calls existing serializeData method then merges in state\n    // attributes.\n    _wrapSerializeData() {\n      var serializeData = this.view.serializeData;\n      var state = this.view.state;\n\n      this.view.serializeData = () => {\n        var data = serializeData.call(this); // 'this' is the view\n        var stateAttrs = _.clone(state.attributes);\n\n        // If existing attributes do NOT contain 'state', drop stateAttribute right in.\n        if (_.isUndefined(data.state)) {\n          data.state = stateAttrs;\n        }\n        // If existing attribute DO contain 'state', attempt a safe merge.\n        else if (_.isObject(data.state)) {\n          this._mergeAttrs(data.state, stateAttrs);\n        }\n        else {\n          throw new Mn.Error('\\'state\\' already defined and not extensible.');\n        }\n\n        return data;\n      };\n    },\n\n    // Assign attributes into target, throwing Error rather than overwriting any existing.\n    _mergeAttrs(target, attrs) {\n      for (var attr in attrs) {\n        if (_.isUndefined(target[attr])) {\n          target[attr] = attrs[attr];\n        }\n        else {\n          throw new Mn.Error('Attribute \\'' + attr + '\\' already defined.');\n        }\n      }\n    }\n  });\n\n  var state_behavior = StateBehavior;\n\n  _state.Behavior = state_behavior;\n  _state.syncEntityEvents = syncEntityEvents;\n  _state.stopSyncingEntityEvents = stopSyncingEntityEvents;\n\n  var index = _state;\n\n  return index;\n\n}));\n"],"sourceRoot":"/source/"}